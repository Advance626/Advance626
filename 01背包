01背包
问题:有 N 件物品和一个容量为 V 的背包.放入第 i 件物品耗费的费用是 C[i],得到的价值是 Wi,求解将哪些物品装入背包可使价值总和最大.
特点:每种物品仅有一件,可以选择放或不放.
基本思路:用子问题定义状态:即 F[i][j] 表示前 i 件物品恰放入一个容量为 j 的背包可以获得的最大价值.
则其状态转移方程便是F[i][j]=max(F[i-1][j],F[i-1][j-c[i]]+w[i]);
详细解释一下:"将前 i 件物品放入容量为 j 的背包中"这个子问题,若只考虑第 i 件物品的策略(放或不放),那么就可以转化为一个只和前 i-1 件物品相关的问题.
如果不放第 i 件物品,那么问题就转化为"前 i-1 件物品放入容量为 j 的背包中"，价值为 F[i-1][j];
如果放第 i 件物品，那么问题就转化为"前 i-1 件物品放入剩下的容量为 j-C[i] 的背包中”，此时能获得的最大价值就是 F[i-1][j-c[i]]再加上通过放入第 i 件物品获得的价值 W[i];
注意:为什么要把前 i-1 件物品放入剩下的容量为 j-C[i] 的背包中?因为前面对F[i][j]的定义,注意 "恰" 这个字,如果我们每次都刻意地注意 "恰" 这个字下的情况,就符合求最大价值的贪心想法
但是,要注意的是怎么把这种想法变成代码形式？ 很简单,增加一个判断语句 " if(j>=c[i]) ",判断是否数组越界即可,举个例子
5 10
2 6
5 3
4 5
2 4
3 6
用dp[][]数组来表示
for(int i=1;i<=n;++i){
    for(int j=m;j>=1;--j){
        if(j>=c[i]){
            dp[i][j]=max(dp[i-1][j],dp[i-1][j-c[i]]+w[i]);
        }
        else{
            dp[i][j]=dp[i-1][j];
        }
    }
}
来模拟一下
i = 1 ,j = 10
j >= c[1](6)
dp[1][10]=max(dp[0][10],dp[0][4]+w[1]) ==> dp[1][10]=2;

i = 1 , j = 9
j >= c[1](6)
dp[1][9]=max(dp[0][10],dp[0][3]+w[1]) ==> dp[1][9]=2;

i = 1 , j = 8
j >= c[1](6)
dp[1][8]=max(dp[0][10],dp[0][2]+w[1]) ==> dp[1][8]=2;

i = 1 , j = 7
j >= c[1](6)
dp[1][7]=max(dp[0][10],dp[0][1]+w[1]) ==> dp[1][7]=2;

i = 1 , j = 6
j >= c[1](6)
dp[1][6]=max(dp[0][10],dp[0][0]+w[1]) ==> dp[1][6]=2;

i = 1 , j = 5
j < c[1](6)
dp[1][5]=dp[0][5]=0
....
dp[1][1~4]=0

i = 2 , j = 10
j >= c[2]
dp[2][10]=max(dp[1][10],dp[1][7]+w[2]) ==> max(2,2+5) ==> dp[2][10]=7;

i = 2 , j = 9
j >= c[2]
dp[2][9]=max(dp[1][9],dp[1][6]+w[2]) ==> max(2,2+5) ==>dp[2][9]=7;

i=2, j=8
j>=c[2]
dp[2][8] =max(dp[1][8],dp[1][5]+w[2]) ==>max(2,5) ==>dp[2][8]=5;

i=2, j=7
j>=c[2]
dp[2][7]=max(dp[1][7],dp[1][4]+w[2]) ==>max(2,5) ==>dp[2][7]=5;

i=2, j=6
j>=c[2]
dp[2][6]=max(dp[1][6],dp[1][3]+w[2]) ==>max(2,5) ==>dp[2][7]=5;

i=2, j=5
j>=c[2]
dp[2][5]=max(dp[1][5],dp[1][2]+w[2]) ==>max(0,5) ==>dp[2][7]=5;

i=2, j=4
j>=c[2]
dp[2][4]=max(dp[1][4],dp[1][1]+w[2]) ==>max(0,5) ==>dp[2][4]=5;

i=2, j=3
j>=c[2]
dp[2][3]=max(dp[1][3],dp[1][0]+w[2]) ==>max(0,5) ==>dp[2][3]=5;

i=2, j=2
j<c[2]
dp[2][2]=dp[1][2]=0

i=2, j=1
j<c[2]
dp[2][1]=dp[1][1]=0

以后你看到这里还没明白,你再继续写,今天我明白了,就不继续写了
